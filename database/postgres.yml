apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/exit-on-complete: 'true'
        vault.hashicorp.com/role: "app-database"
        vault.hashicorp.com/agent-inject-secret-postgres-env: 'kv/data/postgres-root'
        vault.hashicorp.com/agent-inject-template-postgres-env: |
          {{- with secret "kv/data/postgres-root" }}
            export POSTGRES_USER="{{ .Data.data.DB_USER }}"
            export POSTGRES_PASSWORD="{{ .Data.data.DB_PASSWORD }}"
          {{- end }}
    spec:
      serviceAccountName: vault-auth
      containers:
        - name: postgres
          image: postgres:latest
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              retries=0
              max_retries=30
              
              echo "Waiting for secrets to be injected from Vault..."
              
              while [ ! -f /vault/secrets/postgres-env ]; do
                if [ $retries -ge $max_retries ]; then
                  echo "ERROR: Timed out after $(($max_retries * 2)) seconds waiting for Vault secret file."
                  exit 1
                fi
                retries=$((retries + 1))
                echo "Waiting... attempt ${retries}/${max_retries}"
                sleep 2
              done
              
              echo "Secrets found. Sourcing environment variables."
              
              set -a
              source /vault/secrets/postgres-env
              set +a
              
              exec docker-entrypoint.sh postgres
          env:
            - name: POSTGRES_DB
              value: services
            - name: TZ
              value: UTC
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: vault-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 3600
                  audience: vault