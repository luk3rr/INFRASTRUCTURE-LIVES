- name: K3s | Prepare the node
  block:
    - name: Disable swap
      ansible.posix.mount:
        name: none
        fstype: swap
        state: absent

    - name: Remove swap entry from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '\sswap\s'
        state: absent

    - name: Ensure br_netfilter module is loaded
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: Ensure kernel parameters for Kubernetes are set
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward

    - name: Disable IPv6 at boot via GRUB
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="ipv6.disable=1"'

    - name: Update GRUB to apply IPv6 disable
      ansible.builtin.command: update-grub

    - name: Persist IPv6 disable in sysctl.d
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-disable-ipv6.conf
        content: |
          net.ipv6.conf.all.disable_ipv6 = 1
          net.ipv6.conf.default.disable_ipv6 = 1
          net.ipv6.conf.lo.disable_ipv6 = 1
        mode: '0644'

    - name: Create netplan override to disable IPv6
      ansible.builtin.copy:
        dest: /etc/netplan/99-disable-ipv6.yaml
        content: |
          network:
            version: 2
            ethernets:
              eth0:
                dhcp6: no
                accept-ra: no
        owner: root
        group: root
        mode: '0644'

    - name: Apply netplan changes
      ansible.builtin.command: netplan apply

- name: K3s | Install K3s server
  ansible.builtin.shell:
    cmd: curl -sfL https://get.k3s.io | sh -
  args:
    creates: /usr/local/bin/k3s

- name: K3s | Create config directory and copy custom config template
  vars:
    dns_server: "192.168.1.102"
  block:
    - name: Ensure K3s config directory exists
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'
    - name: Copy K3s config file with custom DNS
      ansible.builtin.template:
        src: config.yaml.j2
        dest: /etc/rancher/k3s/config.yaml
        owner: root
        group: root
        mode: '0644'

- name: K3s | Restart K3s service to apply configuration
  ansible.builtin.systemd:
    name: k3s
    state: restarted
    enabled: yes

- name: K3s | Configure kubeconfig for the local user
  block:
    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy k3s.yaml to user's kubeconfig
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

    - name: Replace localhost with the node's IP in kubeconfig
      ansible.builtin.replace:
        path: "/home/{{ ansible_user }}/.kube/config"
        regexp: '127\.0\.0\.1'
        replace: "{{ ansible_host }}"

- name: K3s | Fetch the kubeconfig file to the local machine
  ansible.builtin.fetch:
    src: "/home/{{ ansible_user }}/.kube/config"
    dest: "fetched_kubeconfigs/{{ inventory_hostname }}"
    flat: yes