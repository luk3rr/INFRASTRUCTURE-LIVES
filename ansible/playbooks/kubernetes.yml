- name: Deploy K3s Kubernetes Cluster
  hosts: k8s-node
  become: yes
  gather_facts: yes
  roles:
    - k3s

- name: Configure local kubectl for the new cluster
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Ensure .kube directory exists in your home folder
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.kube"
        state: directory
        mode: '0755'

    - name: Merge fetched kubeconfig with existing config
      ansible.builtin.shell: |
        KUBECONFIG={{ lookup('env', 'HOME') }}/.kube/config:fetched_kubeconfigs/k8s-node \
        kubectl config view --flatten > /tmp/merged_kubeconfig && \
        mv /tmp/merged_kubeconfig {{ lookup('env', 'HOME') }}/.kube/config
      args:
        executable: /bin/bash

    - name: Display confirmation and instructions
      ansible.builtin.debug:
        msg:
          - "Setup complete! Your kubectl is now configured."
          - "To see all available cluster contexts, run: kubectl config get-contexts"
          - "To switch to the new K3s cluster, run: kubectl config use-context default"

- name: Configure CoreDNS to use AdGuard as the upstream resolver
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    adguard_ip: "192.168.1.102"

  tasks:
    - name: Get current CoreDNS ConfigMap
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ConfigMap
        name: coredns
        namespace: kube-system
      register: coredns_cm

    - name: Set original Corefile as a fact
      ansible.builtin.set_fact:
        original_corefile: "{{ coredns_cm.resources[0].data.Corefile }}"

    - name: Prepare new Corefile by replacing the default forwarder
      ansible.builtin.set_fact:
        modified_corefile: "{{ original_corefile | regex_replace('forward \\. /etc/resolv.conf.*', 'forward . ' + adguard_ip) }}"

    - name: Patch CoreDNS ConfigMap with the new Corefile
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: coredns
            namespace: kube-system
          data:
            Corefile: "{{ modified_corefile }}"
      notify: Restart CoreDNS

  handlers:
    - name: Restart CoreDNS
      listen: "Restart CoreDNS"
      ansible.builtin.command:
        cmd: kubectl -n kube-system rollout restart deployment coredns
